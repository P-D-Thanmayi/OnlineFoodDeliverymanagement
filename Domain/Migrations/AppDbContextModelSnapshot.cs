// <auto-generated />
using Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("cust_id");

                    b.HasKey("AddressId")
                        .HasName("PK__address__CAA247C853D7D107");

                    b.HasIndex("CustId");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId")
                        .HasName("PK__category__D54EE9B47021D588");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("delivery_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int")
                        .HasColumnName("agent_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("DeliveryId")
                        .HasName("PK__delivery__1C5CF4F5BC3FDD18");

                    b.HasIndex("AgentId");

                    b.HasIndex("OrderId");

                    b.ToTable("delivery", (string)null);
                });

            modelBuilder.Entity("Domain.Models.DeliveryAgent", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("int")
                        .HasColumnName("agent_id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("AgentId")
                        .HasName("PK__delivery__2C05379EF16E6169");

                    b.ToTable("delivery_agent", (string)null);
                });

            modelBuilder.Entity("Domain.Models.FoodItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("item_name");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("keywords");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2, 1)")
                        .HasColumnName("rating");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("ItemId")
                        .HasName("PK__food_ite__52020FDD44ECF4CD");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("food_items", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("PK__orders__46596229241C82EF");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Domain.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("RestaurantId")
                        .HasName("PK__restaura__3B0FAA91A6DFDE71");

                    b.ToTable("restaurant", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("restaurant_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReviewId")
                        .HasName("PK__review__60883D90252E84FF");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsValid")
                        .HasMaxLength(255)
                        .HasColumnType("bit")
                        .HasColumnName("is_valid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phoneno")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phoneno");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F9CBDC252");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Address", b =>
                {
                    b.HasOne("Domain.Models.User", "Cust")
                        .WithMany("Addresses")
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__address__cust_id__3A81B327");

                    b.Navigation("Cust");
                });

            modelBuilder.Entity("Domain.Models.Delivery", b =>
                {
                    b.HasOne("Domain.Models.DeliveryAgent", "Agent")
                        .WithMany("Deliveries")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__delivery__agent___60A75C0F");

                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("Deliveries")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__delivery__order___5FB337D6");

                    b.Navigation("Agent");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.DeliveryAgent", b =>
                {
                    b.HasOne("Domain.Models.User", "Agent")
                        .WithOne("DeliveryAgent")
                        .HasForeignKey("Domain.Models.DeliveryAgent", "AgentId")
                        .IsRequired()
                        .HasConstraintName("FK__delivery___agent__5CD6CB2B");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Domain.Models.FoodItem", b =>
                {
                    b.HasOne("Domain.Models.Category", "Category")
                        .WithMany("FoodItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__food_item__categ__4316F928");

                    b.HasOne("Domain.Models.Restaurant", "Restaurant")
                        .WithMany("FoodItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__food_item__resta__4222D4EF");

                    b.Navigation("Category");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.HasOne("Domain.Models.Restaurant", "Restaurant")
                        .WithMany("Orders")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__orders__restaura__46E78A0C");

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__orders__user_id__45F365D3");

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.OrderItem", b =>
                {
                    b.HasOne("Domain.Models.FoodItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__order_ite__item___49C3F6B7");

                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__order_ite__order__48CFD27E");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.Restaurant", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithOne("Restaurant")
                        .HasForeignKey("Domain.Models.Restaurant", "RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__restauran__resta__3D5E1FD2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Review", b =>
                {
                    b.HasOne("Domain.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__review__restaura__5812160E");

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__review__user_id__571DF1D5");

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("Domain.Models.DeliveryAgent", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("Domain.Models.Restaurant", b =>
                {
                    b.Navigation("FoodItems");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("DeliveryAgent");

                    b.Navigation("Orders");

                    b.Navigation("Restaurant");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
